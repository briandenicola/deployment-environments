{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "app_name" : {           
            "type": "string"
        },
        "location" : {
            "type": "string",
            "defaultValue": "[resourceGroup().location]"
        },
        "networkContributorRoleNameGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        },
        "msiOperatorRoleNameGuid": {
            "type": "string",
            "defaultValue": "[newGuid()]"
        }
    },
    "variables": {
        "redis_name" : "[concat(parameters('app_name'), '-cache')]",
        "acr_name" :   "[concat(replace(parameters('app_name'),'-',''), 'acr')]",
        "vnet_name" : "[concat(parameters('app_name'), '-vnet')]",
        "aks_name" :  "[concat(parameters('app_name'), '-aks')]",
        "keyvault_name" : "[concat(parameters('app_name'), '-kv')]",
        "loganalytics_name" : "[concat(parameters('app_name'), '-logs')]",
        "nsg_name": "[concat(variables('vnet_name'), '-nsg')]",
        "cluster_identity": "[concat(variables('aks_name'), '-cluster-identity')]",
        "kublet_identity": "[concat(variables('aks_name'), '-kubelet-identity')]"
    },
    "resources": [
        {
            "type": "Microsoft.Cache/Redis",
            "apiVersion": "2022-05-01",
            "name": "[variables('redis_name')]",
            "location":  "[parameters('location')]",
            "properties": {
                "redisVersion": "6.0",
                "sku": {
                    "name": "Standard",
                    "family": "C",
                    "capacity": 0
                },
                "enableNonSslPort": false,
                "minimumTlsVersion": "1.2",
                "publicNetworkAccess": "Enabled",
                "redisConfiguration": {
                    "maxmemory-policy": "volatile-lru",
                    "maxmemory-reserved": "30",
                    "maxfragmentationmemory-reserved": "30",
                    "maxmemory-delta": "30"
                }
            }
        },
        {
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2022-02-01-preview",
            "name": "[variables('acr_name')]",
            "location":  "[parameters('location')]",
            "sku": {
                "name": "Premium",
                "tier": "Premium"
            },
            "properties": {
                "adminUserEnabled": false,
                "networkRuleSet": {
                    "defaultAction": "Deny",
                    "ipRules": [
                    ]
                }
            }
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2022-07-01",
            "name": "[variables('keyvault_name')]",
            "location":  "[parameters('location')]",
            "properties": {
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "tenantId": "[subscription().tenantId]",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow",
                    "ipRules": [
                    ],
                    "virtualNetworkRules": []
                },
                "accessPolicies": [
                ],
                "enabledForDeployment": false,
                "enabledForDiskEncryption": false,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "softDeleteRetentionInDays": 7,
                "enableRbacAuthorization": false,
                "vaultUri": "[concat('https://', variables('keyvault_name'), '.vault.azure.net/')]",
                "provisioningState": "Succeeded",
                "publicNetworkAccess": "Enabled"
            }
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2022-01-31-preview",
            "name": "[variables('cluster_identity')]",
            "location":  "[parameters('location')]"
        },
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2022-01-31-preview",
            "name": "[variables('kublet_identity')]",
            "location":  "[parameters('location')]"
        },
        {
            "type": "Microsoft.OperationalInsights/workspaces",
            "apiVersion": "2021-12-01-preview",
            "name": "[variables('loganalytics_name')]",
            "location":  "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "PerGB2018"
                },
                "retentionInDays": 30,
                "features": {
                    "enableLogAccessUsingOnlyResourcePermissions": true
                },
                "workspaceCapping": {
                    "dailyQuotaGb": -1
                },
                "publicNetworkAccessForIngestion": "Enabled",
                "publicNetworkAccessForQuery": "Enabled"
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[variables('nsg_name')]",
            "location":  "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "port_443",
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups/securityRules', variables('nsg_name'), 'port_443')]",
                        "type": "Microsoft.Network/networkSecurityGroups/securityRules",
                        "properties": {
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "name": "[variables('vnet_name')]",
            "location":  "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.183.0.0/16"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": []
                },
                "subnets": [
                    {
                        "name": "servers",
                        "properties": {
                            "addressPrefix": "10.183.2.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsg_name'))]"
                            },
                            "serviceEndpoints": [],
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        },
                        "type": "Microsoft.Network/virtualNetworks/subnets"
                    }
                ],
                "virtualNetworkPeerings": [],
                "enableDdosProtection": false
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('kublet_identity'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('cluster_identity'))]"
            ],
            "apiVersion": "2022-04-01",
            "name": "[parameters('msiOperatorRoleNameGuid')]",
            "scope": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('kublet_identity'))]",
            "properties": {
                "principalId": "[reference(resourceid('Microsoft.ManagedIdentity/userAssignedIdentities', variables('cluster_identity')),'2018-11-30').principalId]",
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'f1a07417-d97a-45cb-824c-7a7467783830')]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet_name'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('cluster_identity'))]"
            ],
            "apiVersion": "2022-04-01",
            "name": "[parameters('networkContributorRoleNameGuid')]",
            "scope": "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet_name'))]",
            "properties": {
                "principalId": "[reference(resourceid('Microsoft.ManagedIdentity/userAssignedIdentities', variables('cluster_identity')),'2018-11-30').principalId]",
                "roleDefinitionId": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '4d97b98b-1d4f-4787-a291-c67834d212e7')]"
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "name": "aksManagedCluster",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('vnet_name'))]",
                "[resourceId('Microsoft.OperationalInsights/workspaces', variables('loganalytics_name'))]",
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('cluster_identity'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "parameters": {},
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {},
                    "variables": {},
                    "resources": [{
                        "type": "Microsoft.ContainerService/managedClusters",
                        "apiVersion": "2022-07-02-preview",
                        "name": "[variables('aks_name')]",
                        "location":  "[parameters('location')]",
                        "dependsOn": [
                        ],
                        "sku": {
                            "name": "Basic",
                            "tier": "Free"
                        },
                        "identity": {
                            "type": "UserAssigned",
                            "userAssignedIdentities": {
                                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('cluster_identity'))]": {}
                            }
                        },
                        "properties": {
                            "kubernetesVersion": "1.24.6",
                            "dnsPrefix": "[variables('aks_name')]",
                            "agentPoolProfiles": [
                                {
                                    "name": "default",
                                    "count": 1,
                                    "vmSize": "Standard_DS4_v2",
                                    "osDiskSizeGB": 30,
                                    "osDiskType": "Managed",
                                    "kubeletDiskType": "OS",
                                    "vnetSubnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet_name'), 'servers')]",
                                    "maxPods": 40,
                                    "type": "VirtualMachineScaleSets",
                                    "maxCount": 3,
                                    "minCount": 1,
                                    "enableAutoScaling": true,
                                    "scaleDownMode": "Delete",
                                    "powerState": {
                                        "code": "Running"
                                    },
                                    "orchestratorVersion": "1.24.6",
                                    "enableNodePublicIP": false,
                                    "enableCustomCATrust": false,
                                    "mode": "System",
                                    "enableEncryptionAtHost": false,
                                    "enableUltraSSD": false,
                                    "osType": "Linux",
                                    "osSKU": "CBLMariner",
                                    "upgradeSettings": {
                                        "maxSurge": "25%"
                                    },
                                    "enableFIPS": false
                                }
                            ],
                            "servicePrincipalProfile": {
                                "clientId": "msi"
                            },
                            "addonProfiles": {
                                "azureKeyvaultSecretsProvider": {
                                    "enabled": true,
                                    "config": {
                                        "enableSecretRotation": "true",
                                        "rotationPollInterval": "5m"
                                    }
                                },
                                "azurepolicy": {
                                    "enabled": true
                                },
                                "omsagent": {
                                    "enabled": true,
                                    "config": {
                                        "logAnalyticsWorkspaceResourceID": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('loganalytics_name'))]"
                                    }
                                },
                                "openServiceMesh": {
                                    "enabled": true
                                }
                            },
                            "nodeResourceGroup": "[concat(variables('aks_name'), '_k8s_nodes_rg')]",
                            "enableRBAC": true,
                            "networkProfile": {
                                "networkPlugin": "azure",
                                "loadBalancerSku": "Standard",
                                "loadBalancerProfile": {
                                    "managedOutboundIPs": {
                                        "count": 1
                                    },
                                    "backendPoolType": "nodeIPConfiguration"
                                },
                                "serviceCidr": "100.97.0.0/16",
                                "dnsServiceIP": "100.97.0.10",
                                "dockerBridgeCidr": "172.17.0.1/16",
                                "outboundType": "loadBalancer",
                                "serviceCidrs": [
                                    "100.97.0.0/16"
                                ],
                                "ipFamilies": [
                                    "IPv4"
                                ]
                            },
                            "aadProfile": {
                                "managed": true,
                                "adminGroupObjectIDs": [
                                ],
                                "enableAzureRBAC": true,
                                "tenantID": "[subscription().tenantID]"
                            },
                            "apiServerAccessProfile": {
                            },
                            "identityProfile": {
                                "kubeletidentity": {
                                    "resourceId": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', variables('kublet_identity'))]"
                                }
                            },
                            "autoScalerProfile": {
                                "balance-similar-node-groups": "false",
                                "expander": "random",
                                "max-empty-bulk-delete": "10",
                                "max-graceful-termination-sec": "600",
                                "max-node-provision-time": "15m",
                                "max-total-unready-percentage": "45",
                                "new-pod-scale-up-delay": "0s",
                                "ok-total-unready-count": "3",
                                "scale-down-delay-after-add": "10m",
                                "scale-down-delay-after-delete": "10s",
                                "scale-down-delay-after-failure": "3m",
                                "scale-down-unneeded-time": "10m",
                                "scale-down-unready-time": "20m",
                                "scale-down-utilization-threshold": "0.5",
                                "scan-interval": "10s",
                                "skip-nodes-with-local-storage": "false",
                                "skip-nodes-with-system-pods": "true"
                            },
                            "autoUpgradeProfile": {
                                "upgradeChannel": "patch"
                            },
                            "disableLocalAccounts": true,
                            "securityProfile": {
                                "defender": {
                                    "logAnalyticsWorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('loganalytics_name'))]",
                                    "securityMonitoring": {
                                        "enabled": true
                                    }
                                },
                                "workloadIdentity": {
                                    "enabled": true
                                }
                            },
                            "storageProfile": {
                                "diskCSIDriver": {
                                    "enabled": true,
                                    "version": "v1"
                                },
                                "fileCSIDriver": {
                                    "enabled": true
                                },
                                "snapshotController": {
                                    "enabled": true
                                }
                            },
                            "publicNetworkAccess": "Enabled",
                            "oidcIssuerProfile": {
                                "enabled": true
                            },
                            "ingressProfile": {
                                "webAppRouting": {
                                    "enabled": true
                                }
                            },
                            "workloadAutoScalerProfile": {}
                        }
                    }]
                }
            }
        }
    ]
}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: aks-istio-identity
  namespace: aks-istio-ingress
  annotations:
    azure.workload.identity/client-id: replace_me_with_istio_managed_identity_client_id
    azure.workload.identity/tenant-id: replace_me_with_istio_managed_identity_tenant_id
  labels:
    azure.workload.identity/use: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: default-backend
  namespace: aks-istio-ingress
spec:
  selector:
    matchLabels:
      app: default-ingress-backend
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: default-ingress-backend
    spec:
      serviceAccountName: aks-istio-identity
      containers:
      - name: ingress
        image: nginx:latest
        ports:
        - containerPort: 80
        resources:
          requests:
            memory: "64Mi"
            cpu: "250m"
          limits:
            memory: "128Mi"
            cpu: "500m"
        volumeMounts:
        - name: tls-mount
          mountPath: "/mnt/secrets-store"
          readOnly: true
      volumes:
      - name: tls-mount
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "istio-tls"
---
apiVersion: v1
kind: Service
metadata:
  name: default-backend-svc
  namespace: aks-istio-ingress
  labels:
    version: "1.0"
spec:
  selector:
    app: default-ingress-backend
  ports:
  - port: 80
    targetPort: 80
  type: ClusterIP
---
apiVersion: networking.istio.io/v1beta1
kind: VirtualService
metadata:
  name:  default-contoso-tech-vs
  namespace: aks-istio-ingress
spec:
  hosts:
  -  istio-default.contoso.tech
  gateways:
  -  aks-istio-ingress/default-contoso-tech-gw
  http:
  - route:
    - destination:
        host: default-backend-svc
        port:
          number: 80
